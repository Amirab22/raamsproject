function [fitresult, gof] = createFits(t, M, x_sim, y_sim)
%CREATEFITS(T,M,X_SIM,Y_SIM)
%  Create fits.
%
%  Data for 'simulation tc =0.03;, delta 11' fit:
%      X Input : t
%      Y Output: M
%  Data for 'our data' fit:
%      X Input : x_sim
%      Y Output: y_sim
%  Data for 'tc =0.03,delta = 10' fit:
%      X Input : t
%      Y Output: M
%  Data for 'tc  =0.03 ,delta = 8.5' fit:
%      X Input : t
%      Y Output: M
%  Data for 'tc = 0.04 ,delta =8.5' fit:
%      X Input : t
%      Y Output: M
%  Data for 'tc = 0.05,delta =8.5' fit:
%      X Input : t
%      Y Output: M
%  Data for 'tc = 0.04 , delta = 9' fit:
%      X Input : t
%      Y Output: M
%  Data for 'tc = 0.04, delta = 9.5' fit:
%      X Input : t
%      Y Output: M
%  Data for 'untitled fit 9' fit:
%      X Input : t
%      Y Output: M
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 22-Dec-2022 16:37:30

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 9, 1 );
gof = struct( 'sse', cell( 9, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'simulation tc =0.03;, delta 11'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.0697639860741081 0.262777926507577 0.630670242512203 0.69945860145395];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'simulation tc =0.03;, delta 11' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'M vs. t', 'simulation tc =0.03;, delta 11', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'our data'.
[xData, yData] = prepareCurveData( x_sim, y_sim );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.377321215840646 0.68701223101332 0.442616683004992 0.431518184028301];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'our data' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'y_sim vs. x_sim', 'our data', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'x_sim', 'Interpreter', 'none' );
ylabel( 'y_sim', 'Interpreter', 'none' );
grid on

%% Fit: 'tc =0.03,delta = 10'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.863479172453119 0.615238946568656 0.165895912914407 0.734585654484229];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'tc =0.03,delta = 10' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'M vs. t', 'tc =0.03,delta = 10', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'tc  =0.03 ,delta = 8.5'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.246876295829089 0.418698206639936 0.191309460173007 0.0560951578473332];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'tc  =0.03 ,delta = 8.5' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'M vs. t', 'tc  =0.03 ,delta = 8.5', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'tc = 0.04 ,delta =8.5'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.246876295829089 0.702366628752471 0.191309460173007 0.0560951578473332];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{5}, gof(5)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'tc = 0.04 ,delta =8.5' );
h = plot( fitresult{5}, xData, yData );
legend( h, 'M vs. t', 'tc = 0.04 ,delta =8.5', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'tc = 0.05,delta =8.5'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.246876295829089 0.909969423038428 0.191309460173007 0.0560951578473332];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{6}, gof(6)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'tc = 0.05,delta =8.5' );
h = plot( fitresult{6}, xData, yData );
legend( h, 'M vs. t', 'tc = 0.05,delta =8.5', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'tc = 0.04 , delta = 9'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.246876295829089 0.14159370906113 0.191309460173007 0.0560951578473332];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{7}, gof(7)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'tc = 0.04 , delta = 9' );
h = plot( fitresult{7}, xData, yData );
legend( h, 'M vs. t', 'tc = 0.04 , delta = 9', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'tc = 0.04, delta = 9.5'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.241059707371082 0.622513503773222 0.777339253369657 0.02586724991491];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{8}, gof(8)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'tc = 0.04, delta = 9.5' );
h = plot( fitresult{8}, xData, yData );
legend( h, 'M vs. t', 'tc = 0.04, delta = 9.5', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on

%% Fit: 'untitled fit 9'.
[xData, yData] = prepareCurveData( t, M );

% Set up fittype and options.
ft = fittype( 'a*exp(-(x/T)^n)+d', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [0 -Inf -Inf 1];
opts.StartPoint = [0.191309460173007 0.0560951578473332 0.258989764663666 0.916901259990014];
opts.Upper = [Inf Inf Inf 2];

% Fit model to data.
[fitresult{9}, gof(9)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 9' );
h = plot( fitresult{9}, xData, yData );
legend( h, 'M vs. t', 'untitled fit 9', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 't', 'Interpreter', 'none' );
ylabel( 'M', 'Interpreter', 'none' );
grid on


